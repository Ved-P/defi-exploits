// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

contract EtherGame {
    uint256 public targetAmount = 10 ether;

    address public winner;

    address public player1;
    address public player2;
    address public cplayer;

    function register() public {
        require(player2 == address(0x00), "A game is on");
        if (player1 == address(0x00)) {
            player1 = msg.sender;
        } else {
            player2 = msg.sender;
            cplayer = player1; // starts
            winner = address(0x00);
        }
    }

    function deposit() public payable {
        require(cplayer == msg.sender, "It's not your turn yet");
        require(msg.value == 1 ether || msg.value == 2 ether, "You can only send 1 or 2 Ether");

        uint256 balance = address(this).balance;
        require(balance <= targetAmount, "Game is over");

        if (balance >= targetAmount) {
            // set winner
            winner = msg.sender;
        } else {
            // switch turn
            if (cplayer == player1) {
                cplayer = player2;
            } else {
                cplayer = player1;
            }
        }
    }

    function claimReward() public {
        require(msg.sender == winner, "Not winner");

        (bool sent,) = msg.sender.call{value: address(this).balance}("");
        require(sent, "Failed to send Ether");

        // reset game
        player1 = address(0x00);
        player2 = address(0x00);
        winner = address(0x00);
    }
}