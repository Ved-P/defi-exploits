// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import {Test, console} from "forge-std/Test.sol";
import "forge-std/Vm.sol";

import {EtherQueen} from "../src/Problem4.sol";
import {Attacker} from "./Attacker4.sol";

contract EtherQueenTest is Test {
    EtherQueen public eq;
    Attacker public attacker;

    address alice = address(0x10);
    address bob = address(0x11);

    function setUp() public {
        eq = new EtherQueen();
        attacker = new Attacker(eq);

        deal(address(eq), 0 ether);
        deal(address(attacker), 1 ether);

        deal(alice, 10 ether);
        deal(bob, 20 ether);
    }

    function test_attack() public {

        attacker.attack();

        vm.startPrank(alice);
        vm.expectRevert();
        eq.claimThrone{value: 10 ether}();
        vm.stopPrank();

        vm.startPrank(bob);
        vm.expectRevert();
        eq.claimThrone{value: 20 ether}();
        vm.stopPrank();

    }

}
