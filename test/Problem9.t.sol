// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import {Test, console, stdError} from "forge-std/Test.sol";
import "forge-std/Vm.sol";

import {FlashLoanPool, Helper} from "../src/Problem9.sol";
import {Attacker} from "./Attacker9.sol";

contract ProfitTest is Test {
    FlashLoanPool public flashloan;
    Attacker public attacker;
    Helper public helper;

    function setUp() public {
        flashloan = new FlashLoanPool();
        attacker = new Attacker(flashloan);
        helper = new Helper(flashloan);

        deal(address(flashloan), 1000 ether);
        deal(address(attacker), 10 ether);
        deal(address(helper), 10 ether);

        for (uint256 i=0; i<10; i++) {
            helper.loan();
        }
    }

    function test_attack() public {

        // console.log("balance of attacker (before)", address(attacker).balance);
        attacker.attack();
        // console.log("balance of attacker (after)", address(attacker).balance);

        assertEq(address(attacker).balance, 20 ether, "Need more balance for attacker");
    }

}