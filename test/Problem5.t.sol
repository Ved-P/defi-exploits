// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import {Test, console, stdError} from "forge-std/Test.sol";
import "forge-std/Vm.sol";

import {EtherQueen} from "../src/Problem5.sol";
import {Attacker} from "./Attacker5.sol";

contract EtherQueenTest is Test {
    EtherQueen public eq;
    Attacker public attacker;

    address alice = address(0x10);

    function setUp() public {
        eq = new EtherQueen();
        attacker = new Attacker(eq);

        deal(address(eq), 100 ether);
        deal(address(attacker), 9 ether);

        deal(alice, 10 ether);
    }

    function test_attack() public {
        attacker.claimThrone();

        vm.startPrank(alice);
        eq.claimThrone{value: 10 ether}();
        vm.stopPrank();

        // console.log("balance of attacker (before)", address(attacker).balance);
        attacker.attack();
        // console.log("balance of attacker (after)", address(attacker).balance);

        assertEq(eq.queen(), address(attacker), "Queen is not attacker");

    }

}
