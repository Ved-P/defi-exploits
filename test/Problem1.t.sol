// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import {Test, console} from "forge-std/Test.sol";
import "forge-std/Vm.sol";

import {Game} from "../src/Problem1.sol";
import {Attacker} from "./Attacker1.sol";

contract GameTest is Test {
    Game public game;
    Attacker public attacker;

    address alice = address(0x10);
    address bob = address(0x11);
    address charlie = address(0x13);

    function setUp() public {
        game = new Game();
        attacker = new Attacker(game);

        deal(address(game), 0 ether);
        deal(address(attacker), 100 ether);

        deal(alice, 100 ether);
        deal(bob, 100 ether);
        deal(charlie, 100 ether);
    }

    function test_attack() public {
        vm.startPrank(alice);
        game.addToken{value: 2 ether}();
        vm.stopPrank();

        vm.startPrank(bob);
        game.addToken{value: 2 ether}();
        vm.stopPrank();

        attacker.attack();

        vm.startPrank(charlie);
        vm.expectRevert("Game has ended");
        game.addToken{value: 2 ether}();
        vm.stopPrank();

    }

}
